# Example config file /etc/vsftpd.conf
#
# The default compiled in settings are fairly paranoid. This sample file
# loosens things up a bit, to make the ftp daemon more usable.
# Please see vsftpd.conf.5 for all compiled in defaults.
#
# READ THIS: This example file is NOT an exhaustive list of vsftpd options.
# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's
# capabilities.
#
#
# Run standalone?  vsftpd can run either from an inetd or as a standalone
# daemon started from an initscript.
<% if @vsftpd_listen == 'true' -%>
listen=YES
<% else -%>
listen=NO
<% end -%>
#
# If vsftpd is in standalone mode, the default listen address is all local
# interfaces.
<% if @vsftpd_listen_address -%>
listen_address=<%= @vsftpd_listen_address %>
<% else -%>
#listen_address=0.0.0.0
<% end -%>
#
# In vsftpd standalone mode, this is the port it will listen on for incoming
# FTP connections.
<% if @vsftpd_listen_port -%>
listen_port=<%= @vsftpd_listen_port %>
<% else -%>
listen_port=21
<% end -%>
#
# Run standalone with IPv6?
# Like the listen parameter, except vsftpd will listen on an IPv6 socket
# instead of an IPv4 one. This parameter and the listen parameter are mutually
# exclusive.
<% if @vsftpd_listen_ipv6 == 'true' -%>
listen_ipv6=YES
<% else -%>
listen_ipv6=NO
<% end -%>
#
# If vsftpd is in standalone mode, the default listen address is all local
# interfaces.
<% if @vsftpd_listen_address6 -%>
listen_address6=<%= @vsftpd_listen_address6 %>
<% else -%>
#listen_address6=
<% end -%>
#
# If vsftpd is in standalone mode, this is the maximum number of clients which
# may be connected.
<% if @vsftpd_max_clients -%>
max_clients=<%= @vsftpd_max_clients %>
<% else -%>
max_clients=0
<% end -%>
# 
# After this many login failures, the session is killed.
<% if @vsftpd_max_login_fails -%>
max_login_fails=<%= @vsftpd_max_login_fails%>
<% else -%>
max_login_fails=3
<% end -%>
#
# If vsftpd is in standalone mode, this is the maximum number of clients which
# may be connected from the same source internet address.
<% if @vsftpd_max_per_ip -%>
max_per_ip=<%= @vsftpd_max_per_ip %>
<% else -%>
max_per_ip=0
<% end -%>
#
# Allow anonymous FTP? (Beware - allowed by default if you comment this out).
<% if @vsftpd_anonymous_enable == 'true' -%>
anonymous_enable=YES
<% else -%>
anonymous_enable=NO
<% end -%>
#
# When enabled, this prevents vsftpd from asking for an anonymous password.
<% if @vsftpd_no_anon_password == 'true' -%>
no_anon_password=YES
<% else -%>
no_anon_password=NO
<% end -%>
#
# If set to YES, anon users will be permitted to create new directories under
# certain conditions. For this to work, option write_enable must be activated,
# and the anonymous ftp user must have write permissions on the parent directory.
<% if @vsftpd_anon_mkdir_write_enable == 'true' -%>
anon_mkdir_write_enable=YES
<% else -%>
anon_mkdir_write_enable=NO
<% end -%>
#
# If set to YES, anon users will be permitted to perform write operations other
# than upload and create directories, such as deletion and renaming.
<% if @vsftpd_anon_other_write_enable == 'true' -%>
anon_other_write_enable=YES
<% else -%>
anon_other_write_enable=NO
<% end -%>
#
# If set to YES, anon users will be permitted to download files which are world
# readable.
<% if @vsftpd_anon_world_readable_only == 'true' -%>
anon_world_readable_only=YES
<% else -%>
anon_world_readable_only=NO
<% end -%>
#
# Uncomment this to allow the anonymous FTP user to upload files. This only
# has an effect if the above global write enable is activated. Also, you will
# obviously need to create a directory writable by the FTP user.
<% if @vsftpd_anon_upload_enable == 'true' -%>
anon_upload_enable=YES
<% else -%>
anon_upload_enable=NO
<% end -%>
#
# The maximum data transfer rate permitted, in bytes per second, for anon clients
<% if @vsftpd_anon_max_rate -%>
anon_max_rate=<%= @vsftpd_anon_max_rate %>
<% else -%>
anon_max_rate=0
<% end -%>
#
# The value that the umask for file creation is set to for anon users.
<% if @vsftpd_anon_umask -%>
anon_umask=<%= @vsftpd_anon_umask %>
<% else -%>
anon_umask=077
<% end -%>
#
# The directory which vsftpd will try to change into after an anonymouse login.
<% if @vsftpd_anon_root -%>
anon_root=<%= @vsftpd_anon_root%>
<% else -%>
#anon_root=
<% end -%>
#
# Uncomment this to allow local users to log in.
<% if @vsftpd_local_enable == 'true' -%>
local_enable=YES
<% else -%>
local_enable=NO
<% end -%>
#
# This option represents the directory which vsftpd will try to change into
# after a local login. Failure is silently ignored.
<% if @vsftpd_local_root -%>
local_root=<%= @vsftpd_local_root %>
<% else -%>
#local_root=
<% end -%>
#
# By default, numeric IDs are shown in the user and group fields of directory
# listings. You can get textual names by enabling this parameter. Turned off
# by default for performance reasons.
<% if @vsftpd_text_userdb_names == 'true' -%>
text_userdb_names=YES
<% else -%>
text_userdb_names=NO
<% end -%>
#
# If enabled, vsftpd will try and resolve pathnames such as ~chris/pics.
<% if @vsftpd_tilde_user_enable == 'true' -%>
tilde_user_enable=YES
<% else -%>
tilde_user_enable=NO
<% end -%>
#
# If enabled, all user and group information in directory listings will be
# displayed as "ftp".
<% if @vsftpd_hide_ids == 'true' -%>
hide_ids=YES
<% else -%>
hide_ids=NO
<% end -%>
#
# This option can be used to set a pattern for filenames which should be hidden
# from directory listings. Despite being hidden, they are fully accessible to
# clients who know what names to actually use.
# Example: hide_file={*.mp3,.hidden,hide*,h?}
<% if @vsftpd_hide_file -%>
hide_file=<%= @vsftpd_hide_file%>
<% else -%>
#hide_file=
<% end -%>
#
# This option can be used to set a pattern for filenames which should not be
# accessible in any way. The affected items are not hidden, but any attempt
# to do anything to them will be denied. Please consider using filesystem
# permissions instead as they are more reliable.
# Example:{*.mp3,*.mov,.private}
<% if @vsftpd_deny_file -%>
deny_file=<%= @vsftpd_deny_file%>
<% else -%>
#deny_file=
<% end -%>
#
# This option specifies a comma separated list of allowed FTP commands post login
<% if @vsftpd_cmds_allowed -%>
cmds_allowed=<%= @vsftpd_cmds_allowed%>
<% else -%>
#cmds_allowed=
<% end -%>
#
# This option specifies a comma separated list of denied FTP commands post login
<% if @vsftpd_cmds_denied -%>
cmds_denied=<%= @vsftpd_cmds_denied %>
<% else -%>
#cmds_denied=
<% end -%>
#
# If enabled, all non-anonymous logins are classed as "guest" logins. A guest
# login is remapped to the user specified in the guest_username setting.
<% if @vsftpd_guest_enable == 'true' -%>
guest_enable=YES
<% else -%>
guest_enable=NO
<% end -%>
#
# This setting is the real username which guest users are mapped to.
<% if @vsftpd_guest_username -%>
guest_username=<%= @vsftpd_guest_username %>
<% else -%>
guest_username=ftp
<% end -%>
#
# This option is useful in conjunction with virtual users. It is used to
# automatically generate a home directory for each virtual user, based on a
# template. For example, if the home directory of the real user specified via
# guest_username is /home/virtual/$USER, and user_sub_token is set to $USER,
# then when virtual user fred logs in, he will end up (usually chroot()'ed) in
# the directory /home/virtual/fred. This option also takes affect if local_root
# contains user_sub_token.
<% if @vsftpd_user_sub_token -%>
user_sub_token=<%= @vsftpd_user_sub_token %>
<% else -%>
#user_sub_token=
<% end -%>
#
# This allows the override of any config option specified in the manual page, on
# a per-user basis. For example, if you set user_config_dir to be /etc/vsftpd.d
# and then log on as the user 'fred', then vsftpd will apply the settings in
# the file /etc/vsftpd.d/fred for the duration of the session.
<% if @vsftpd_user_config_dir -%>
user_config_dir=<%= @vsftpd_user_config_dir %>
<% else -%>
#user_config_dir=
<% end -%>
# 
# Uncomment this to enable any form of FTP write command.
<% if @vsftpd_write_enable == 'true' -%>
write_enable=YES
<% else -%>
write_enable=NO
<% end -%>
#
# When enabled, all uploads proceed with a write lock on the upload file. All
# downloads proceed with a shared read lock on the download file.
<% if @vsftpd_lock_upload_files == 'true' -%>
lock_upload_files=YES
<% else -%>
lock_upload_files=NO
<% end -%>
#
# Default umask for local users is 077. You may wish to change this to 022,
# if your users expect that (022 is used by most other ftpd's)
<% if @vsftpd_local_umask -%>
local_umask=<%= @vsftpd_local_umask %>
<% else -%>
local_umask=077
<% end -%>
#
# The maximum data transfer rate permitted, in bytes per second, for local
# authenticated users.
<% if @vsftpd_local_max_rate -%>
local_max_rate=<%= @vsftpd_local_max_rate %>
<% else -%>
local_max_rate=0
<% end -%>
#
# Whether to delete uploaded files that have failed.
<% if @vsftpd_delete_failed_uploads == 'true' -%>
delete_failed_uploads=YES
<% else -%>
delete_failed_uploads=NO
<% end -%>
#
# Allow or disallow directory list commands.
<% if @vsftpd_dirlist_enable == 'true' -%>
dirlist_enable=YES
<% else -%>
dirlist_enable=NO
<% end -%>
#
# Activate directory messages - messages given to remote users when they
# go into a certain directory.
<% if @vsftpd_dirmessage_enable == 'true' -%>
dirmessage_enable=YES
<% else -%>
dirmessage_enable=NO
<% end -%>
#
# This is the name of the file to look for when a new directory is entered.
# The contents are displayed to the remote user. Only relevant if dirmessage_enable
# is enabled.
<% if @vsftpd_message_file -%>
message_file=<%= @vsftpd_message_file %>
<% else -%>
message_file=.message
<% end -%>
#
# If activated, files and directories starting with . will be shown in directory
# listings even if the "a" flag was not used by the client. This override
# excludes the "." and ".." directories.
<% if @vsftpd_force_dot_files == 'true' -%>
force_dot_files=YES
<% else -%>
force_dot_files=NO
<% end -%>
#
# If enabled, vsftpd will display directory listings with the time
# in  your  local  time  zone.  The default is to display GMT. The
# times returned by the MDTM FTP command are also affected by this
# option.
<% if @vsftpd_use_localtime == 'true' -%>
use_localtime=YES
<% else -%>
use_localtime=NO
<% end -%>
#
# Activate logging of uploads/downloads.
<% if @vsftpd_xferlog_enable == 'true' -%>
xferlog_enable=YES
<% else -%>
xferlog_enable=NO
<% end -%>
#
# You may override where the log file goes if you like. The default is shown
# below.
<% if @vsftpd_xferlog_file -%>
xferlog_file=<%= @vsftpd_xferlog_file %>
<% else -%>
xferlog_file=/var/log/xferlog
<% end -%>
#
# This option is the name of the file to which we write vsftpd style log file.
<% if @vsftpd_log_file -%>
vsftpd_log_file=<%= @vsftpd_log_file %>
<% else -%>
vsftpd_log_file=/var/log/vsftpd.log
<% end -%>
#
# If you want, you can have your log file in standard ftpd xferlog format.
# Note that the default log file location is /var/log/xferlog in this case.
<% if @vsftpd_xferlog_std_format == 'true' -%>
xferlog_std_format=YES
<% else -%>
xferlog_std_format=NO
<% end -%>
#
# If enabled, two log files are generated in parallel, going by default to
# /var/log/xferlog and /var/log/vsftpd.log. The former is a wu-ftpd style
# transfer log, parseable by standard tools.
<% if @vsftpd_dual_log_enable == 'true' -%>
dual_log_enable=YES
<% else -%>
dual_log_enable=NO
<% end -%>
#
# When enabled, all FTP requests and responses are logged, providing the option
# xferlog_std_format is not enabled. Useful for debugging.
<% if @vsftpd_log_ftp_protocol == 'true' -%>
log_ftp_protocol=YES
<% else -%>
log_ftp_protocol=NO
<% end -%>
#
# When enabled, this prevents vsftpd from taking a file lock when writing to log
# files. This option should generally not be enabled and is provided as a
# workaround for OS bugs such as Solaris/Veritas filesystem combinations.
<% if @vsftpd_no_log_lock == 'true' -%>
no_log_lock=YES
<% else -%>
no_log_lock=NO
<% end -%>
#
# If enabled, then any log output which would have gone to /var/log/vsftpd.log
# goes to the system log instead. Logging is done under the FTPD facility.
<% if @vsftpd_syslog_enable == 'true' -%>
syslog_enable=YES
<% else -%>
syslog_enable=NO
<% end -%>
#
# If enabled, and vsftpd was compiled with tcp_wrappers support, incoming
# connections will be fed through tcp_wrappers access control.
<% if @vsftpd_tcp_wrappers == 'true' -%>
tcp_wrappers=YES
<% else -%>
tcp_wrappers=NO
<% end -%>
#
# Make sure PORT transfer connections originate from port 20 (ftp-data).
<% if @vsftpd_connect_from_port_20 == 'true' -%>
connect_from_port_20=YES
<% else -%>
connect_from_port_20=NO
<% end -%>
#
# The port from which PORT style connections originate (as long as the poorly
# named connect_from_port_20 is enabled)
<% if @vsftpd_ftp_data_port -%>
ftp_data_port=<%= @vsftpd_ftp_data_port %>
<% else -%>
ftp_data_port=20
<% end -%>
#
# Set to NO if you want to disallow the PORT method of obtaining a data connection.
<% if @vsftpd_port_enable == 'true' -%>
port_enable=YES
<% else -%>
port_enable=NO
<% end -%>
#
# Set to YES if you want to disable the PORT security check that ensures that
# outgoing data connections can only connect to the client. Only enable if you
# know what you're doing!
<% if @vsftpd_port_promiscuous == 'true' -%>
port_promiscuous=YES
<% else -%>
port_promiscuous=NO
<% end -%>
#
# Set to NO if you want to disallow the PASV method of obtaining a data conection.
# Defaults to YES.
<% if @vsftpd_pasv_enable == 'true' -%>
pasv_enable=YES
<% else -%>
pasv_enable=NO
<% end -%>
#
# The minimum port to allocate for PASV style data connections. Can be used
# to specify a narrow port range to assist firewalling. Defaults to 0 to use
# any port.
<% if @vsftpd_pasv_min_port -%>
pasv_min_port=<%= @vsftpd_pasv_min_port %>
<% else -%>
pasv_min_port=0
<% end -%>
#
# The maximum port to allocate for PASV style data connections. Can be used
# to specify a narrow port range to assist firewalling. Defaults to 0 to use
# any port.
<% if @vsftpd_pasv_max_port -%>
pasv_max_port=<%= @vsftpd_pasv_max_port %>
<% else -%>
pasv_max_port=0
<% end -%>
#
# Set to YES if you want to disable the PASV security check that ensures the
# data connection originates from the same IP address as the control connection.
<% if @vsftpd_pasv_promiscuous == 'true' -%>
pasv_promiscuous=YES
<% else -%>
pasv_promiscuous=NO
<% end -%>
#
# Use this option to override the IP address that vsftpd will advertise in
# response to the PASV command. Provide a numeric IP address, unless
# pasv_addr_resolve is enabled.
<% if @vsftpd_pasv_address -%>
pasv_address=<%= @vsftpd_pasv_address %>
<% else -%>
#pasv_address=
<% end -%>
#
# Set to YES if you want to use a hostname in the pasv_address option.
<% if @vsftpd_pasv_addr_resolve == 'true' -%>
pasv_addr_resolve=YES
<% else -%>
pasv_addr_resolve=NO
<% end -%>
#
# When enabled, allows use of hte SITE CHMOD command. NOTE! This only applies
# to local users. Anonymous user never get to use SITE CHMOD.
<% if @vsftpd_chmod_enable == 'true' -%>
chmod_enable=YES
<% else -%>
chmod_enable=NO
<% end -%>
#
# If you want, you can arrange for uploaded anonymous files to be owned by
# a different user. Note! Using "root" for uploaded files is not
# recommended!
<% if @vsftpd_chown_uploads == 'true' -%>
chown_uploads=YES
<% else -%>
chown_uploads=NO
<% end -%>
#
# The file mode to force for chown()ed anonymous uploads.
<% if @vsftpd_chown_upload_mode -%>
chown_upload_mode=<%= @vsftpd_chown_upload_mode %>
<% else -%>
chown_upload_mode=0600
<% end -%>
#
# The permissions with which uploaded files are created. Umasks are applied
# on top of this value.
<% if @vsftpd_file_open_mode -%>
file_open_mode=<%= @vsftpd_file_open_mode %>
<% else -%>
file_open_mode=0666
<% end -%>
#
# When enabled, this setting will allow MDTM to set file modification times.
<% if @vsftpd_mdtm_write == 'true' -%>
mdtm_write=YES
<% else -%>
mdtm_write=NO
<% end -%>
#
# The user to chown the files to
<% if @vsftpd_chown_username -%>
chown_username=<%= @vsftpd_chown_username %>
<% else -%>
chown_username=root
<% end -%>
#
# The timeout, in seconds, for a remote client to establish a connection with
# a PASV style data connection.
<% if @vsftpd_accept_timeout -%>
accept_timeout=<%= @vsftpd_accept_timeout %>
<% else -%>
accept_timeout=60
<% end -%>
#
# The timeout, in seconds, for a remote client to establish a connection with
# a PORT style data connection.
<% if @vsftpd_connect_timeout -%>
connect_timeout=<%= @vsftpd_connect_timeout %>
<% else -%>
connect_timeout=60
<% end -%>
# 
# You may change the default value for timing out an idle session.
<% if @vsftpd_idle_session_timeout -%>
idle_session_timeout=<%= @vsftpd_idle_session_timeout %>
<% else -%>
idle_session_timeout=600
<% end -%>
#
# You may change the default value for timing out a data connection.
<% if @vsftpd_data_connection_timeout -%>
data_connection_timeout=<%= @vsftpd_data_connection_timeout %>
<% else -%>
data_connection_timeout=120
<% end -%>
#
# The number of seconds to pause prior to reporting a failed login.
<% if @vsftpd_delay_failed_login -%>
delay_failed_login=<%= @vsftpd_delay_failed_login %>
<% else -%>
delay_failed_login=1
<% end -%>
#
# The number of seconds to pause prior to allowing a successful login.
<% if @vsftpd_delay_successful_login -%>
delay_successful_login=<%= @vsftpd_delay_successful_login %>
<% else -%>
delay_successful_login=0
<% end -%>
#
# This controls whether vsftpd attempts to maintain sessions for logins.
<% if @vsftpd_session_support == 'true' -%>
session_support=YES
<% else -%>
session_support=NO
<% end -%>
#
# You probably don't want to change this, but try setting it to something like
# 8192 for a much smoother bandwidth limiter. Defaults to 0 which lets vsftpd
# pick a sensible setting.
<% if @vsftpd_trans_chunk_size -%>
trans_chunk_size=<%= @vsftpd_trans_chunk_size %>
<% else -%>
trans_chunk_size=0
<% end -%>
#
# If enabled, vsftpd will try and show session status information in the system
# process listing. In other words, the reported name of the process will change
# to reflect what a vsftpd session is doing (idle, downloading etc).
<% if @vsftpd_setproctitle_enable == 'true' -%>
setproctitle_enable=YES
<% else -%>
setproctitle_enable=NO
<% end -%>
#
# An internal setting used for testing the relative benefit of using sendfile()
<% if @vsftpd_use_sendfile == 'true' -%>
use_sendfile=YES
<% else -%>
use_sendfile=NO
<% end -%>
#
# It is recommended that you define on your system a unique user which the
# ftp server can use as a totally isolated and unprivileged user.
<% if @vsftpd_nopriv_user -%>
nopriv_user=<%= @vsftpd_nopriv_user %>
<% else -%>
nopriv_user=nobody
<% end -%>
#
# Enable this and the server will recognise asynchronous ABOR requests. Not
# recommended for security (the code is non-trivial). Not enabling it,
# however, may confuse older FTP clients.
<% if @vsftpd_async_abor_enable == 'true' -%>
async_abor_enable=YES
<% else -%>
async_abor_enable=NO
<% end -%>
#
# By default the server will pretend to allow ASCII mode but in fact ignore
# the request. Turn on the below options to have the server actually do ASCII
# mangling on files when in ASCII mode.
# Beware that on some FTP servers, ASCII support allows a denial of service
# attack (DoS) via the command "SIZE /big/file" in ASCII mode. vsftpd
# predicted this attack and has always been safe, reporting the size of the
# raw file.
# ASCII mangling is a horrible feature of the protocol.
<% if @vsftpd_ascii_upload_enable == 'true' -%>
ascii_upload_enable=YES
<% else -%>
ascii_upload_enable=NO
<% end -%>
#
<% if @vsftpd_ascii_download_enable == 'true' -%>
ascii_download_enable=YES
<% else -%>
ascii_download_enable=NO
<% end -%>
#
# If set to NO, all download requests will be given permission denied.
<% if @vsftpd_download_enable == 'true' -%>
download_enable=YES
<% else -%>
download_enable=NO
<% end -%>
#
# This is the name of the user we use for handling anon FTP. The home directory
# of this user is the root of the anon FTP area.
<% if @vsftpd_ftp_username -%>
ftp_username=<%= @vsftpd_ftp_username %>
<% else -%>
ftp_username=ftp
<% end -%>
#
# You may fully customise the login banner string:
<% if @vsftpd_ftpd_banner -%>
ftpd_banner=<%= @vsftpd_ftpd_banner %>
<% else -%>
#ftpd_banner=Welcome to blah FTP service.
<% end -%>
#
# This option is then name of the file containing text to display when someone
# connects to the server. If set, it overrides the banner string provided by
# ftpd_banner.
<% if @vsftpd_banner_file -%>
banner_file=<%= @vsftpd_banner_file%>
<% else -%>
#banner_file=
<% end -%>
#
# When enabled, and vsftpd is started in "listen" mode, vsftpd will background
# the listener process. i.e. control will immediately be returned to the shell
# which launched vsftpd.
<% if @vsftpd_background == 'true' -%>
background=YES
<% else -%>
background=NO
<% end -%>
#
# Set to YES if you want vsftpd to run as the user which launched vsftpd. Do NOT
# enable this option unless you totally know what you're doing. Vsftpd cannot
# use chroot() to restrict file access when this option is set (even if launched
# as root)
<% if @vsftpd_run_as_launching_user == 'true' -%>
run_as_launching_user=YES
<% else -%>
run_as_launching_user=NO
<% end -%>
#
# You may specify a file of disallowed anonymous e-mail passwords. Apparently
# useful for combatting certain DoS attacks.
<% if @vsftpd_deny_email_enable == 'true' -%>
deny_email_enable=YES
<% else -%>
deny_email_enable=NO
<% end -%>
# (default follows)
<% if @vsftpd_banned_email_file -%>
banned_email_file=<%= @vsftpd_banned_email_file %>
<% else -%>
banned_email_file=/etc/vsftpd.d/vsftpd.banned_emails
<% end -%>
#
# Set to YES if you want only to allow a specified list of e-mail passwords
# for anonymous logins to be accepted.
<% if @vsftpd_secure_email_list_enable == 'true' -%>
secure_email_list_enable=YES
<% else -%>
secure_email_list_enable=NO
<% end -%>
#
# This option can be used to provide an alternate file for usage by the
# above option.
<% if @vsftpd_email_password_file -%>
email_password_file=<%= @vsftpd_email_password_file %>
<% else -%>
email_password_file=/etc/vsftpd.d/vsftpd.email_passwords
<% end -%>
#
# If enabled, vsftpd will load a list of usernames, from the filename given
# by userlist_file. If a user tries to log in using a name in this file, they
# will be denied before they are asked for a password.
<% if @vsftpd_userlist_enable == 'true' -%>
userlist_enable=YES
<% else -%>
userlist_enable=NO
<% end -%>
#
# This option is examined if userlist_enable is activated. If you set this to NO
# then users will be denied login unless they are explicitly listed in the file
# specified by userlist_file.
<% if @vsftpd_userlist_deny == 'true' -%>
userlist_deny=YES
<% else -%>
userlist_deny=NO
<% end -%>
#
# This option is the name of the file loaded when userlist_enable is active.
<% if @vsftpd_userlist_file -%>
userlist_file=<%= @vsftpd_userlist_file %>
<% else -%>
userlist_file=/etc/vsftpd.d/vsftpd.userlist_file
<% end -%>
#
# You may restrict local users to their home directories.  See the FAQ for
# the possible risks in this before using chroot_local_user or
# chroot_list_enable below.
<% if @vsftpd_chroot_local_user == 'true' -%>
chroot_local_user=YES
<% else -%>
chroot_local_user=NO
<% end -%>
#
# If enabled, along with chroot_local_user, then a chroot() mail location may
# be specified on a per-user basis. Each user's jail is derived from their home
# directory string in /etc/password.
<% if @vsftpd_passwd_chroot_enable == 'true' -%>
passwd_chroot_enable=YES
<% else -%>
passwd_chroot_enable=NO
<% end -%>
#
# You may specify an explicit list of local users to chroot() to their home
# directory. If chroot_local_user is YES, then this list becomes a list of
# users to NOT chroot().
# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that
# the user does not have write access to the top level directory within the
# chroot)
<% if @vsftpd_chroot_list_enable == 'true' -%>
chroot_list_enable=YES
<% else -%>
chroot_list_enable=NO
<% end -%>
# (default follows)
<% if @vsftpd_chroot_list_file -%>
chroot_list_file=<%= @vsftpd_chroot_list_file %>
<% else -%>
chroot_list_file=/etc/vsftpd.d/vsftpd.chroot_list
<% end -%>
#
# If enabled, virtual users will use the same privileges as local users. By
# default, virtual users will use the same privileges as anonymous users.
<% if @vsftpd_virtual_use_local_privs == 'true' -%>
virtual_use_local_privs=YES
<% else -%>
virtual_use_local_privs=NO
<% end -%>
#
# You may activate the "-R" option to the builtin ls. This is disabled by
# default to avoid remote users being able to cause excessive I/O on large
# sites. However, some broken FTP clients such as "ncftp" and "mirror" assume
# the presence of the "-R" option, so there is a strong case for enabling it.
<% if @vsftpd_ls_recurse_enable == 'true' -%>
ls_recurse_enable=YES
<% else -%>
ls_recurse_enable=NO
<% end -%>
#
# Customization
#
# Some of vsftpd's settings don't fit the filesystem layout by
# default.
#
# This option should be the name of a directory which is empty.  Also, the
# directory should not be writable by the ftp user. This directory is used
# as a secure chroot() jail at times vsftpd does not require filesystem
# access.
<% if @vsftpd_secure_chroot_dir -%>
secure_chroot_dir=<%= @vsftpd_secure_chroot_dir %>
<% else -%>
secure_chroot_dir=/var/run/vsftpd/empty
<% end -%>
#
# This string is the name of the PAM service vsftpd will use.
<% if @vsftpd_pam_service_name -%>
pam_service_name=<%= @vsftpd_pam_service_name %>
<% else -%>
pam_service_name=vsftpd
<% end -%>
#
# This option only has an effect for non-PAM builds of vsftpd. If disabled,
# vsftpd will not check /etc/shells for a valid user shell for local logins.
<% if @vsftpd_check_shell == 'true' -%>
check_shell=YES
<% else -%>
check_shell=NO
<% end -%>
#
# Enable SSL
# 
<% if @vsftpd_ssl_enable == 'true' -%>
ssl_enable=YES
<% else -%>
ssl_enable=NO
<% end -%>
#
# Enable OpenSSL connection diagnostics to vsftpd log file.
#
<% if @vsftpd_debug_ssl == 'true' -%>
debug_ssl=YES
<% else -%>
debug_ssl=NO
<% end -%>
#
# If ssl is enabled, vsftpd will request a certificate on incoming connections.
#
<% if @vsftpd_ssl_request_cert == 'true' -%>
ssl_request_cert=YES
<% else -%>
ssl_request_cert=NO
<% end -%>
#
# If set to yes, all SSL client connections are required to present a client
# certificate.
<% if @vsftpd_require_cert == 'true' -%>
require_cert=YES
<% else -%>
require_cert=NO
<% end -%>
#
# If set to yes, all SSL data connections are required to exhibit SSL session
# reuse. Defaults to YES.
<% if @vsftpd_require_ssl_reuse == 'true' -%>
require_ssl_reuse=YES
<% else -%>
require_ssl_reuse=NO
<% end -%>
#
# If enabled, an SSL handshake is the first thing to expect on all connections.
# To support explicit SSL and/or plain text too, a separate vsftpd listener
# process should be run.
<% if @vsftpd_implicit_ssl == 'true' -%>
implicit_ssl=YES
<% else -%>
implicit_ssl=NO
<% end -%>
#
# If ssl_enable is active, allow anonymous users to use secured SSL connections.
<% if @vsftpd_allow_anon_ssl == 'true' -%>
allow_anon_ssl=YES
<% else -%>
allow_anon_ssl=NO
<% end -%>
#
# If ssl_enable is active, if activated, all anonymouse logins are forced to use
# a secure SSL connection for data connections.
#
<% if @vsftpd_force_anon_data_ssl == 'true' -%>
force_anon_data_ssl=YES
<% else -%>
force_anon_data_ssl=NO
<% end -%>
# If ssl_enable is active, if activated, all anonymouse logins are forced to use
# a secure SSL connection to send the password.
#
<% if @vsftpd_force_anon_logins_ssl == 'true' -%>
force_anon_logins_ssl=YES
<% else -%>
force_anon_logins_ssl=NO
<% end -%>
# If ssl_enable is active, if activated, all non-anonymous logins are forced to
# use a secure SSL connection for data connections.
#
<% if @vsftpd_force_local_data_ssl == 'true' -%>
force_local_data_ssl=YES
<% else -%>
force_local_data_ssl=NO
<% end -%>
# If ssl_enable is active, if activated, all non-anonymous logins are forced to
# use a secure SSL connection to send the password.
<% if @vsftpd_force_local_logins_ssl == 'true' -%>
force_local_logins_ssl=YES
<% else -%>
force_local_logins_ssl=NO
<% end -%>
#
# Only applies if ssl_enable is activated, this option will permit SSL v2
# protocol extensions.
<% if @vsftpd_ssl_sslv2 == 'true' -%>
ssl_sslv2=YES
<% else -%>
ssl_sslv2=NO
<% end -%>
#
# Only applies if ssl_enable is activated, this option will permit SSL v2
# protocol extensions.
<% if @vsftpd_ssl_sslv3 == 'true' -%>
ssl_sslv3=YES
<% else -%>
ssl_sslv3=NO
<% end -%>
#
# Only applies if ssl_enable is activated, this option will permit TLS v1
# protocol extensions.
#
<% if @vsftpd_ssl_tlsv1 == 'true' -%>
ssl_tlsv1=YES
<% else -%>
ssl_tlsv1=NO
<% end -%>
#
# Set the name of a file to load Certificate Authority certs from, for the
# purpose of validating client certs. Regrettably, the default SSL CA cert paths
# are not used, because of vsftpd's use of restricted filesystem spaces (chroot)
<% if @vsftpd_ca_certs_file -%>
ca_certs_file=<%= @vsftpd_ca_certs_file %>
<% else -%>
#ca_certs_file=
<% end -%>
#
# If set to yes, all SSL client certificates received must validate OK. Self
# signed certs to not constitue OK validation.
<% if @vsftpd_validate_cert == 'true' -%>
validate_cert=YES
<% else -%>
validate_cert=NO
<% end -%>
#
# If enabled, SSL data uploads are required to terminate via SSL, not an EOF
# on the socket.
# 
<% if @vsftpd_strict_ssl_read_eof == 'true' -%>
strict_ssl_read_eof=YES
<% else -%>
strict_ssl_read_eof=NO
<% end -%>
#
# If enabled, SSL data downloads are required to terminate via SSL, not an EOF
# on the socket.
# 
<% if @vsftpd_strict_ssl_write_shutdown == 'true' -%>
strict_ssl_write_shutdown=YES
<% else -%>
strict_ssl_write_shutdown=NO
<% end -%>
# 
# This option specifies the location of the RSA certificate to use for SSL
# encrypted connections.
<% if @vsftpd_rsa_cert_file -%>
rsa_cert_file=<%= @vsftpd_rsa_cert_file %>
<% else -%>
rsa_cert_file=/etc/ssl/private/vsftpd.pem
<% end -%>
#
# Location of the RSA Private Key. If this is not set, the private key is
# expected to be in the same file as the certificate.
<% if @vsftpd_rsa_private_key_file -%>
rsa_private_key_file=<%= @vsftpd_rsa_private_key_file %>
<% else -%>
#rsa_private_key_file=/etc/ssl/private/vsftpd.pem
<% end -%>
#
# This option specifies the location of the DSA certificate to use for SSL
# encrypted connections. Not really necessary, RSA is sufficient.
<% if @vsftpd_dsa_cert_file -%>
dsa_cert_file=<%= @vsftpd_dsa_cert_file %>
<% else -%>
#dsa_cert_file=/etc/ssl/private/vsftpd.pem
<% end -%>
#
# This option specifies the location of the DSA private key to use for SSL
# encrypted connections. If this option is not specified, the private key is 
# expected to be in the same file as the certificate. Not really necessary, 
# RSA is sufficient.
<% if @vsftpd_dsa_private_key_file -%>
dsa_private_key_file=<%= @vsftpd_dsa_private_key_file %>
<% else -%>
#dsa_private_key_file=/etc/ssl/private/vsftpd.pem
<% end -%>
#
# This option can be used to select which SSL ciphers vsftpd will allow for
# encrypted SSL connections.
<% if @vsftpd_ssl_ciphers -%>
ssl_ciphers=<%= @vsftpd_ssl_ciphers %>
<% else -%>
#ssl_ciphers=DES-CBC3-SHA
<% end -%>
