= PUPPET MODULE:
  puppet

== REQUIREMENTS:

=== Platform and Application Environment:

Tested on Ubuntu 12.04.

== USAGE:

# Simple default install

class { 'puppet' : }
include puppet

# Install the master explicitly

include puppet::master

# The AntiClass pattern

class { 'puppet' : installed => false }

or

class { 'puppet::master': remove => true }

# Install a different set of packages than the default

class { 'puppet::client' : packages => { 'puppet' => { provider => 'gem'}, } }

or

class { 'puppet::client' : packages => hiera('some_other_packages') }

Also works from the main puppet class

class { 'puppet' : client_packages => hiera('some_other_packages')

In fact, it's probably best to use the main puppet class unless you know
what you're doing.

class { 'puppet': client => true, master => false }

== CAVEATS:

May work on other platforms. Only tested on Ubuntu 12.04. Currently
Ubuntu/Debian is only explicitly supported vi the params.pp. You can add other
OS support via that class.

Currently, the puppetmaster and puppet client collide on the File resource
"/etc/puppet/puppet.conf". To get around this, the puppet::params class
sets the name to "master-/etc/puppet/puppet.conf" so the resource names don't
collide and compilation succeeds. However, that doesn't mean that a puppet
client and puppetmaster won't overwrite each other's puppet.conf file. Keep 
this in mind if you use this to manage a puppetmaster.

== LICENSE:

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
