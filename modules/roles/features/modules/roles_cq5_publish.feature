Feature: roles/cq5/publish.pp
  In order to setup a cq5 publish server, this role must create the necessary
  resources to run cq5 in publish mode.

    Scenario: roles::cq5::publish
    Given a node named "class-roles-cq5-publish"
    When I try to compile the catalog
    Then compilation should fail

    Scenario: roles::cq5::publish with required facts
    Given a node named "class-roles-cq5-publish"
    And a fact "env" of "prod"
    And a fact "roles" of "author"
    And a fact "cq5_pass" of "foobar"
    When I try to compile the catalog
    Then compilation should succeed
    And all resource dependencies should resolve
    And there should be a resource "Class[roles::base]"
    And there should be a resource "Exec[cq5::publish(mkdir -p /opt/cq5/publish)]"
    And there should be a resource "Mount[/opt/cq5/publish]"
      And the resource should have an "ensure" of "mounted"
      And the resource should have a "device" of "/dev/mapper/publish1-volume"
      And the resource should have an "options" of "defaults"
      And the resource should have a "fstype" of "xfs"
    And there should be a resource "Class[roles::cq5::jvm]"
    And there should be a resource "Class[java]"
    And there should be a resource "Class[cq5]"
    And there should be a resource "Cq5::Node[publish]"
      And the resource should have a "port" of "8080"
      And the resource should have a "path" of "/opt/cq5/publish"
      And the resource should have a "mount" of "/opt/cq5/publish"
      And the resource should have a "zapcat_port" of "10053"
      And the resource should have an "env" of "prod"
      And the resource should have a "role" of "publish"
      And the resource should have a "heap_max" of "2048"
      And the resource should have a "max_files" of "65535"
      And the resource should have a "javaopts" of "-Dcom.day.crx.persistence.tar.IndexMergeDelay=0"
    And there should be a resource "Cron::Crontab[ebs_snapshot_hourly_publish]"
      And the resource should have "installed" set to "true"
      And the resource should have a "command" of "sync && /usr/local/bin/ebs-snapshot.py -r us-east-1 -t 24H instance -i i-123456"
    And there should be a resource "Cron::Crontab[datastore_gc_publish]"
      And the resource should have "installed" set to "true"
      And the resource should have "enabled" set to "false"
      And the resource should have a "command" of "/usr/local/bin/cq5-datastore-gc.rb --host localhost --port 8080 --pass foobar -d -s 2 -l DEBUG | logger -t cq5-datastore-gc"
      And the resource should have a "templates" of "Template_Java_CQ5_CMS"
      And the resource should have a "hostgroups" of "Prod Author Servers"
      And the resource should have a "port" of "10053"
      And the resource should have a "username" of "zapi"
      And the resource should have a "password" of "zappy"

    Scenario: roles::cq5::publish with optional facts
    Given a node named "class-roles-cq5-publish"
    And a fact "env" of "uat"
    And a fact "cq5_publish_path" of "/d0/cq/node1"
    And a fact "cq5_publish_port" of "7402"
    And a fact "cq5_publish_max_heap" of "3072"
    And a fact "cq5_publish_max_files" of "1024"
    And a fact "cq5_publish_javaopts" of "-Dcrx.memoryMaxUsage=98 -Dcrx.memoryMinStdev=1 -Dcom.day.crx.persistence.tar.IndexMergeDelay=0"
    And a fact "cq5_publish_mount_path" of "/d0/cq"
    And a fact "cq5_publish_mount_device" of "/dev/sdj"
    And a fact "cq5_publish_mount_fstype" of "ext3"
    And a fact "roles" of "publisher"
    And a fact "ec2_placement_availability_zone" of "eu-west-1a"
    And a fact "publish_ephemeral_mount" of "/"
    And a fact "cq5_pass" of "foobar"
    And a fact "cq5_publish_datastoregc_enabled" of "true"
    When I try to compile the catalog
    Then compilation should succeed
    And all resource dependencies should resolve
    And there should be a resource "Class[roles::base]"
    And there should be a resource "Exec[cq5::publish(mkdir -p /d0/cq)]"
    And there should be a resource "Mount[/d0/cq]"
      And the resource should have an "ensure" of "mounted"
      And the resource should have a "device" of "/dev/sdj"
      And the resource should have an "options" of "defaults"
      And the resource should have a "fstype" of "ext3"
    And there should be a resource "Class[roles::cq5::jvm]"
    And there should be a resource "Class[java]"
    And there should be a resource "Class[cq5]"
    And there should be a resource "Cq5::Node[publish]"
      And the resource should have a "port" of "7402"
      And the resource should have a "path" of "/d0/cq/node1"
      And the resource should have a "mount" of "/d0/cq"
      And the resource should have a "zapcat_port" of "10059"
      And the resource should have an "env" of "uat"
      And the resource should have a "role" of "publish"
      And the resource should have a "heap_max" of "3072"
      And the resource should have a "max_files" of "1024"
      And the resource should have a "javaopts" of "-Dcrx.memoryMaxUsage=98 -Dcrx.memoryMinStdev=1 -Dcom.day.crx.persistence.tar.IndexMergeDelay=0"
    And there should be a resource "Cron::Crontab[ebs_snapshot_hourly_publish]"
      And the resource should have "installed" set to "false"
      And the resource should have a "command" of "sync && /usr/local/bin/ebs-snapshot.py -r eu-west-1 -t 24H instance -i i-123456"
    And there should be a resource "Cron::Crontab[datastore_gc_publish]"
      And the resource should have "installed" set to "true"
      And the resource should have "enabled" set to "true"
      And the resource should have a "command" of "/usr/local/bin/cq5-datastore-gc.rb --host localhost --port 7402 --pass foobar -d -s 2 -l DEBUG | logger -t cq5-datastore-gc"
      And the resource should have a "templates" of "Template_Java_CQ5_CMS"
      And the resource should have a "hostgroups" of "UAT Publish Servers"
      And the resource should have a "port" of "10059"
      And the resource should have a "username" of "zapi"
      And the resource should have a "password" of "zappy"
