#! /bin/sh

### BEGIN INIT INFO
# Provides:          varnishncsa
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start HTTP accelerator log daemon
# Description:       This script provides logging for varnish
### END INIT INFO

# Source function library
. /lib/lsb/init-functions

NAME=varnishncsa
DESC="HTTP accelerator log deamon"
PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/$NAME
PIDFILE=/var/run/$NAME/$NAME.pid
<% if @varnish_ncsa_pipe_file -%>
LOGFILE=<%= @varnish_ncsa_pipe_file %>
<% else -%>
LOGFILE=/var/log/varnish/varnishncsa.log
<% end -%>
USER=root
DAEMON_OPTS="-a -f -w ${LOGFILE} -D -P ${PIDFILE}"
LOGGER_NAME=logger
LOGGER_PIDFILE=/var/run/$NAME/$LOGGER_NAME.pid
LOGGER_DAEMON=/usr/bin/$LOGGER_NAME
<% if @varnish_ncsa_syslogtag -%>
LOGGER_DAEMON_OPTS="-t <%= @varnish_ncsa_syslogtag %> -f ${LOGFILE}"
<% else -%>
LOGGER_DAEMON_OPTS="-t [varnishncsa] -f ${LOGFILE}"
<% end -%>

# Include defaults if available
if [ -f /etc/default/$NAME ] ; then
        . /etc/default/$NAME
fi

# If unset, or set to "0" or "no", exit
if [ -z "${VARNISHNCSA_ENABLED}" ] || \
   [ "${VARNISHNCSA_ENABLED}" = "0" ] || \
   [ "${VARNISHNCSA_ENABLED}" = "no" ]; then
  exit 0;
fi

test -x $DAEMON || exit 0
test -x $LOGGER_DAEMON || exit 0

start_varnishncsa() {
    ncsa_output=$(/bin/tempfile -s.varnish)
    logger_output=$(/bin/tempfile -s.varnish_ncsa_logger)
    log_daemon_msg "Starting $DESC" "$NAME"
    create_pid_directory
    if start-stop-daemon --start --quiet --pidfile ${PIDFILE} \
        --chuid $USER --exec ${DAEMON} -- ${DAEMON_OPTS} \
        > ${ncsa_output} 2>&1; then
	log_end_msg 0
    else
	log_end_msg 1
	cat $ncsa_output
	exit 1
    fi
    log_daemon_msg "Starting $DESC" "$LOGGER_NAME"
    if start-stop-daemon --make-pidfile --start --background --quiet --pidfile ${LOGGER_PIDFILE} \
        --exec ${LOGGER_DAEMON} -- ${LOGGER_DAEMON_OPTS} \
        > ${logger_output} 2>&1; then
	log_end_msg 0
    else
	log_end_msg 1
	cat $logger_output
	exit 1
    fi

    rm $ncsa_output $logger_output
}

stop_varnishncsa(){
    log_daemon_msg "Stopping $DESC" "$NAME"
    if start-stop-daemon --stop --quiet --pidfile $PIDFILE \
        --retry 10 --exec $DAEMON; then
	log_end_msg 0
    else
	log_end_msg 1
    fi
    log_daemon_msg "Stopping $DESC" "$LOGGER_NAME"
    if start-stop-daemon --stop --quiet --pidfile $LOGGER_PIDFILE\
        --oknodo --retry 10 --exec $LOGGER_DAEMON; then
	log_end_msg 0
    else
	log_end_msg 1
    fi
}

reload_varnishncsa(){
    log_daemon_msg "Reloading $DESC" "$NAME"
    if kill -HUP $(cat $PIDFILE) >/dev/null 2>&1; then
	log_end_msg 0
    else
	log_end_msg 1
	exit 1
    fi
}

status_varnishncsa(){
    status_of_proc -p "${PIDFILE}" "${DAEMON}" "${NAME}"
    status_of_proc -p "${LOGGER_PIDFILE}" "${LOGGER_DAEMON}" "${LOGGER_NAME}"
}

create_pid_directory() {
    install -o $USER -g $USER -d $(dirname $PIDFILE)
}

case "$1" in
    start)
        start_varnishncsa
	;;
    stop)
        stop_varnishncsa
        ;;
    reload)
        reload_varnishncsa
        ;;
    status)
        status_varnishncsa
	;;
    restart|force-reload)
	$0 stop
	$0 start
        ;;
    *)
        log_success_msg "Usage: $0 {start|stop|restart|force-reload|reload}"
        exit 1
        ;;
esac

exit 0
